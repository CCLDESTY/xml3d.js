<?xml version="1.0" encoding="UTF-8"?>
<!-- ======================================================================
     project    xml3d.js
     description
     Deploy script that prepares a single xml3d.js script file

     Author: Kristian Sons
     ====================================================================== -->
<project name="script-merge" default="develop">
	<description>
           Merge all the single scripts to one global xml3d.js
    </description>

	<import file="build-master.xml"/>
	<property file="build.properties" />

	<filelist dir="${srcDir}" id="sourceFiles">
		<file name="xml3d.js" />
		<file name="utils/misc.js" />
		<file name="utils/array.js" />
		<file name="utils/debug.js" />
		<!--<file name="utils/color.js" />-->
		<file name="utils/uri.js" />
		<file name="contrib/glu.js" />
		<file name="contrib/glMatrix.js" />
		<file name="types/vec3.js" />
		<file name="types/rotation.js" />
		<file name="types/box.js" />
		<file name="types/matrix.js" />
		<file name="types/ray.js" />
		<file name="base/adapter.js" />
		<file name="interface/notification.js" />
		<file name="interface/factory.js" />
		<file name="interface/dom.js" />
		<file name="interface/elements.js" />
		<file name="interface/attributes.js" />
		<file name="interface/methods.js" />
		<file name="interface/configuration.js" />
		<file name="renderer/canvashandler.js" />
		<file name="renderer/utils.js" />
		<file name="renderer/shadermanager.js" />
		<file name="renderer/bufferhandler.js" />
		<file name="renderer/renderer.js" />
		<file name="renderer/adapter/xml3d.js" />
		<file name="renderer/adapter/transform.js" />
		<file name="renderer/adapter/view.js" />
		<file name="renderer/adapter/shader.js" />
		<file name="renderer/adapter/texture.js" />
		<file name="renderer/adapter/mesh.js" />
		<file name="renderer/adapter/group.js" />
		<file name="renderer/adapter/light.js" />
		<file name="renderer/adapter/data.js" />
		<file name="renderer/adapter/factory.js" />
		<file name="renderer/shaders.js" />
		<!-- <file name="renderer/xflow/xflow.js" /> -->
	</filelist>

	<target name="lastTag" depends="init, windowsGit, linuxGit">
		<tstamp />
		<git command="describe">
			<args>
				<arg value="--tags" />
				<arg value="--abbrev=0" />
			</args>
		</git>
		<echo message="${git.output}" />
        <concatScripts version="${git.output}" extension="-${git.output}"/>
        <compileScripts version="${git.output}" extension="-${git.output}-min"/>
	</target>

	<target name="continuous" depends="init, windowsGit, linuxGit">
		<tstamp />
		<git command="log">
			<args>
				<arg value="-1" />
				<arg value="--format=%h / %ci" />
			</args>
		</git>
		<echo message="${git.output}" />
		<concatScripts version="DEVELOPMENT SNAPSHOT / ${git.output}" extension="-dev"/>
        <compileScripts version="DEVELOPMENT SNAPSHOT / ${git.output}" extension="-dev-min"/>
        <upload extension="-dev"/>
		<upload extension="-dev-min"/>
	</target>

	<target name="develop" depends="init">
		<tstamp />
		<concatScripts version="DEVELOPMENT SNAPSHOT (${TODAY})"/>
	</target>

    <target name="develop-min" depends="init">
        <tstamp />
        <compileScripts version="DEVELOPMENT SNAPSHOT (${TODAY})" extension=""/>
    </target>

	<!-- - - - - - - - - - - - - - - - - -
          Tools: TODO
         - - - - - - - - - - - - - - - - - -->
	<target name="build-tools">
		<copy file="${srcDir}/../tools/camera.js" toFile="${buildDir}/tools/camera${script.ext}.js" />
	</target>

	<target name="upload-tools">
		<fail unless="upload.url"/>
		<post-file file="${buildDir}/tools/camera${script.ext}.js" url="${upload.url}/tools/" />
	</target>

</project>
